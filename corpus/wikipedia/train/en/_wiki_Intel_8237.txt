Intel 8237 is a direct memory access  controller, a part of the MCS 85 microprocessor family. It enables data transfer between memory and the I/O with reduced load on the system's main processor by providing the memory with control signals and memory address information during the DMA transfer.
The 8237 is a four-channel device that can be expanded to include any number of DMA channel inputs. The 8237 is capable of DMA transfers at rates of up to 1.6 megabyte per second. Each channel is capable of addressing a full 64k-byte section of memory and can transfer up to 64k bytes with a single programming. 1 
A single 8237 was used as the DMA controller in the original IBM PC and IBM XT. The IBM PC AT added another 8237 in master-slave configuration, increasing the number of DMA channels from four to seven. 2   Later IBM-compatible personal computers may have chip sets that emulate the functions of the 8237 for backward compatibility. The Intel 8237 was actually designed by AMD . It was part of a cross licensing agreement, allowing AMD to manufacture Intel processors, that made the design available for Intel as well. This is why the Intel package has " AMD 1980" printed on it.
The 8237 operates in four different modes, depending upon the number of bytes transferred per cycle and number of ICs used:
Memory-to-memory transfer can be performed. This means data can be transferred from one memory device to another memory device. The channel 0 Current Address register is the source for the data transfer and channel 1 and the transfer terminates when Current Word Count register becomes 0. Channel 0 is used for DRAM refresh on IBM PC compatibles. 3 
In auto initialize mode the address and count values are restored upon reception of an end of process  signal. This happens without any CPU intervention. It is used to repeat the last transfer. 3 
The terminal count  signals end of transfer to ISA cards. At the end of transfer an auto initialize will occur configured to do so.
In single mode only one byte is transferred per request. For every transfer, the counting register is decremented and address is incremented or decremented depending on programming. When the counting register reaches zero, the terminal count TC signal is sent to the card. 4  5 
The DMA request DREQ must be raised by the card and held active until it is acknowledged by the DMA acknowledge DACK. 4 
The transfer is activated by  the DREQ which can be deactivated once acknowledged by DACK. The transfer continues until end of process EOP  is activated which will trigger terminal count TC to the card. Auto-initialization may be programmed in this mode. 4 
The transfer is activated by DREQ and acknowledged by DACK and continues until either TC, external EOP or DREQ goes inactive. Only TC or external EOP may activate auto-initialization if this is programmed. 4 
The internal registers used in the 8237 for data transfer are as follows:
As a member of the Intel MCS-85 device family, the 8237 is an 8-bit device with 16-bit addressing.  However, it is compatible with the 8086/88 microprocessors.  The IBM PC and PC XT models  have an 8088 CPU and an 8-bit system bus architecture; the latter interfaces directly to the 8237, but the 8088 has a 20-bit address bus, so four additional 4-bit address latches, one for each DMA channel, are added alongside the 8237 to augment the address counters.  However, because these external latches are separate from the 8237 address counters, they are never automatically incremented or decremented during DMA operations, making it impossible to perform a DMA operation across a 64 KiB address boundary.  Attempts to cross a 64 KiB boundary in a DMA transfer will wrap around within one 64 KiB block of memory. 
The IBM PC AT  and 100% compatibles use an 80286 CPU and a 16-bit system bus architecture.  In addition to the 8237 from the PC and XT models, a second, cascaded 8237 is added, for 16-bit DMA transfers.  This is possible, despite the 8237 being an 8-bit device, because the 8237 performs transfers between an I/O port and memory as "fly-by" transfers in which the data is placed onto the bus by the source memory or I/O port and directly read at the same time by the destination I/O port or memory, without being handled by the 8237.  For this mode of transfer, the width of the data bus is essentially immaterial to the 8237 .  The second 8237 in an AT-class PC provides three 16-bit DMA channels ; its channel 0  is used in cascade mode to connect the 8237 for 8-bit DMA as the "slave" in the cascade arrangement; the 8237 providing the 16-bit channels is the "master".  So that it can address 16-bit words, it is connected to the address bus in such a way that it counts even addresses  instead of single addresses.  Like the first 8237, it is augmented with four address-extension registers.  In an AT-class PC, all eight of the address augmentation registers are 8 bits wide, so that full 24-bit addresses the size of the 80286 address bus can be specified.  DMA transfers on any channel still cannot cross a 64 KiB boundary.    Because the 8237 memory-to-memory DMA mode operates by transferring a byte from the source memory location to an internal temporary 8-bit register in the 8237 and then from the temporary register to the destination memory location, this mode could not be used for 16-bit memory-to-memory DMA, as the temporary register is not large enough.  Additionally, memory-to-memory 16-bit DMA would require use of channel 4, conflicting with its use to cascade the 8237 that handles the 8-bit DMA channels.  However, on the AT, 8-bit DMA channel 0 is no longer used for DRAM refresh, having been replaced by specialized refresh logic, so it should be possible to perform 8-bit memory-to-memory DMA using channels 0 and 1 without interrupting DRAM refresh.
The design of 8237-based DMA in PC AT compatibles was not updated with the move to the 32-bit CPUs and 32-bit system bus architectures.  Consequently, a limitation on these machines is that the 8237 DMA controllers with their companion address "page" extension registers only can address 16 MiB of memory, according to the original design oriented around the 80286 CPU, which itself has this same addressing limitation. 6  This means that for other memory areas, the data has to be transferred first by DMA from the I/O device to an intermediate buffer in the first 16 MiB of the physical address space, and then moved to the final memory by the CPU; or, in the other direction, it must be transferred from the initial memory to the intermediate buffer by the CPU before being transferred by DMA from that buffer to the I/O device.  This technique is called "bounce buffer".  In general, it loses any overall speed benefit associated with DMA, but it may be necessary if a peripheral requires to be accessed by DMA due to either demanding timing requirements or hardware interface inflexibility.
In the PS/2 series of computers, IBM did update the DMA hardware to support 32-bit data and addresses in some systems with 80386 CPUs, but they did this by replacing the 8237 with a new DMA controller design.  The new design includes an 8237 compatibility mode for downward compatibility with the PC AT.
Although this device may not appear as a discrete component in modern personal computer systems, it does appear within system controller chip sets. For example, the PIIX integrated two 8237 controllers for ISA bus DMA. 7  8 
