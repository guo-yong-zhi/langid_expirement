У теорији компајлера, оптимизација петљe је процес повећања брзине извршења и смањења трошкова везаних за петљу. Он игра важну улогу у побољшању кеш перформансе и ефективном коришћењу паралелног процеса могућности. Већи део времена извршења рачунарскe наукe се троши на петље ; многе технике оптимизације компилатора су развијене да их праве брже.
Пошто се инструкције унутар петље могу поново извршавати , често није могуће дати границу о броју инструкција извршења која ће бити под утицајем од стране оптимизације петље. Ово представља изазове када се разматра исправност и бенефиције оптимизације петље, посебно представе израчунавања које се оптимизирају и оптимизација  које се обављају. 1 
Оптимизација петље може да се посматра као примена низа специфичних петљи трансформације  изворног кода или међујезика, са сваком трансформацијом која има упитни тест за законитост. Трансформација  генерално мора да чува временску секвенцу свих зависности података ако је очување резултат програма . Процена користи од трансформације или низа трансформација може бити прилично тешка у оквиру овог приступа, као и примена једне корисне трансформације може захтевати претходно коришћење једне или више других трансформација које, саме по себи, могу довести до пада перформанси.
Унимодуларни приступ трансформација  3  користи једну унимодуларну матрицу да опише комбиновани резултат једне секвенце од многих горњих трансформација. У центру овог приступа је поглед на скуп свих погубљења једног успеха у оквиру петље n као скуп целих бодова у n-димензионалном простору, са тачке која се врши у циљу лексикографског реда. На пример, погубљења у саопштењу смештена унутар спољашње петље са индексом i  и унутрашње петље са индексом ј може бити повезана са паровима бројева . Примена унимодуларне трансформације одговара умножавању тачака у оквиру овог простора од стране матрице. На пример, размена две петље одговара матрици 
  
    
      
        
          
        
      
    
    
  
.
Унимодуларна трансформација је исправна ако чува временски редослед свих зависности података; мерење утицаја на перформансе од стране унимодуларне трансформације је теже. Несавршено угнежђене петље и неке трансформације  се не уклопају лако у том оквиру.
Модел многограника  4  рукује широм класом програма и трансформација него унимодуларни оквир. Скуп извршења скупа исказа у оквиру евентуално несавршено уметнутог скупа петљи се види као заједница скупа полиедра и представља извршење изјава. Трансформација пресликавања се примењује на ове полиедре, производећи опис новог извршења налога. Границе полиедара, зависност података, као и трансформације често описане коришћењем система ограничења, и овај приступ се често назива као ограничење приступа заснованог на оптимизацији петље. На пример, један исказ унутар спољашње петље  'for i := 0 to n' и једна унутрашња петља 'for j := 0 to i+2' се извршава једном за сваки  пар као да је 0 <= i <= n   и   0 <= j <= i+2.
Још једном, трансформација је исправна ако чува временски редослед свих зависности података. Процена предности трансформације, или проналажење најбоље трансформације за дати код на датом рачунару, и даље је предмет у току истраживања, као у време писања овог текста.
