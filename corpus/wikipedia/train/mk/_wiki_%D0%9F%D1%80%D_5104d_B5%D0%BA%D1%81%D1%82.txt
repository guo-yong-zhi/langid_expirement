Протоколот за пренос на хипертекст  е мрежен протокол. HTTP е основа за комуникација на World Wide Web.
Создаден е како средство за објавување на HTML страници. Развивањето на стандардот е координирано од  Internet Engineering Task Force и World Wide Web Consortium.
HTTP е протокол за комуникација помеѓу опслужувачот и клиентот, кој функционира на принцип барање-одговор. HTTP клиентот, кој обично е прелистувач, иницира пренос на податоци по создавањето на TCP / IP врска со оддалечен опслужувач на одредена порта. Клиентот го поднесува HTTP барањето на опслужувачот. Опслужувачот кој содржи податоци, обезбедува ресурси, како што се HTML податотеки, или врши други работи во име на клиентот, и на крај враќа одговор порака на клиентот. А одговор на проектот содржи информации за статусот на барањето и може да содржи барања за клиентот.
HTTP бил измислен од страна на Тим Бернерс-Ли со адреси и HTML за да се создаде World Wide Web. Во тоа време, File Transfer Protocol  е веќе достапен за пренос на податотеки, но тој не можеше да поднесе поимот на формат на податоци како воведен од страна на повеќенаменското Интернет пошта Екстензии . Првата верзија на HTTP беше многу основни, но веќе обезбедија поддршка за MIME заглавја да се опише на податоци пренесени. Оваа прва верзија е сè уште се користи делумно во 2007 година, познат под името HTTP/0.9.
Во мај 1996 година, HTTP/1.0 на крајот стана стандард во IETF и е опишана во RFC 1945. Оваа верзија на HTTP поддржува виртуелни опслужувачи, кеш за управување и за идентификација.
Во јануари 1997 година, HTTP/1.1 е опишана во RFC 2068 ИЕТФ, RFC 2616 и во јуни 1999 година. Оваа верзија носи поддршка за pipelined трансфер и преговори за типот на содржина .
Врската помеѓу клиентот и опслужувачот не е секогаш лесна, може да има машини кои користат средно реле:
Страна на HTTP протоколот, методот е команда да одредува видот на барањето, односно да се каже, го прашува опслужувачот да се изврши некоја акција. Во општата акција се однесува на ресурс идентификувани од страна на URL-то што следи името на методот.
Ова е најчестиот метод за барање ресурс. А ДОБИВАТЕ барање нема ефект на ресурси, би требало да биде можно да се повтори на барање без ефект.
Овој метод бара само информација за ресурс, без да се бара ресурсот себе.
Овој метод треба да се користи за додавање на нов извор . На адреса се испорачува на адреса на ресурси во врска со новиот ресурс  и не ја отворам податотеката на новосоздадената ресурс.
     Овој метод овозможува комуникација опции за ресурс или опслужувачот воопшто.
      Заглавието барање
     
     Барам тело
</prHTTP одговорите имаат следниот формат:
Статус линија 
Како одговор на ова заглавје
Одговор тело
Пребарување:
ГЕТ / станица.html HTTP/1.0
Домаќин: example.com
Referer: http://example.com/
Корисникот Агент: CERN-LineMode/2.15 libwww/2.17b3
Верзијата на HTTP е одреден по URI. Во пријавата мора да се заврши со двојна линија . HTTP 1.0 исто така поддржува и POST методи и главата. Таму е употребата на заглавјата инспириран од MIME за пренос на податоците:
Домаќинот
Одредува веб засегнати од прашањето, која е неопходна за опслужувачко вдомување на повеќе мрежни места на истата IP-адреса . Тоа е само насловот навистина важно.
Referer
Специфицира адреса на документот што го даде линк до бараниот ресурс. Овој наслов му овозможува на администратори да се види таму каде што посетителите доаѓаат од.
Корисникот Агент
Укажува на софтверот што се користи за да се поврзиш. Тоа е обично прелистувач или роботот.
Одговор:
HTTP/1.0 200 OK
Датум: Fri, 31 ДЕКЕМВРИ 1999 23:59:59 GMT
опслужувач: Apache/0.8.4
Content-Type: text / html
Content-Должина: 59
Истекува на: чет, 1 јануари 2000 00:59:59 GMT
Последен-промена: пет, 9 август 1996 година 02:21:40 GMT
<title> Пример </ title>
Ако ја изберете оваа е пример страница.
Во првиот ред се поставува статус HTTP код .
Датум
Времето во кое е генерирана порака.
опслужувач
Укажува на кој модел на HTTP опслужувач на одговори на барањето.
Должина содржина
Ја одредува големината во бајти на ресурс.
Content-Type
Укажува на MIME типот на ресурс.
Истекува
Го одредува времето после кое ресурси треба да се смета застарени овозможува прелистувачи за да се утврди колку долго да се задржи ресурс кеш.
Последен Изменето
Покажува последната модификација денот на бараниот ресурс.
HTTP 1.1 е опишан од RFC 2616 кој го прави застарени RFC 2068. Разликата со HTTP 1.0 е подобро управување со кеш. Домаќинот на заглавието е задолжително во кверија.
Главните преокупации на првите две верзии на HTTP се прво на голем број на врски при вчитување на комплексни страница  и второ, на отворањето на време врска помеѓу клиентот и опслужувачот . Експериментите на постојаните врски, сепак, беа извршени со HTTP 1.0 , но ова е завршена со HTTP 1.1.
По default, HTTP 1,1 користи упорни врски, т.е. врската не е затворен веднаш по барањето, но уште е на располагање за нов пребарување. Ова е често нарекуван задржи-жив функционалност. Тоа исто така е дозволен на клиентот да испрати повеќе HTTP барања на истата врска без да се чека за одговор. Оваа функција се нарекува групирање. Постојани поврзувања овозможува побрзо вчитување на страниците со повеќе ресурси, со истовремено намалување на мрежата на товарот.
На управувањето со упорни врска се постапува од страна на поврзување насловот.
HTTP 1.1 поддржува содржина преговори. На HTTP 1.1 клиентот може да го придружуваат барањето за ресурс насловот укажува кои јазици и форматите за податоци најпосакувана. Овие заглавија, чии имиња почнуваат со-Прифати.
Дополнителни хедери се поддржани од страна на HTTP 1.1:
Врска
Овој наслов може да бидат испратени од страна на клиентот или опслужувачот и содржи список на имиња за одредување на опциите за користење со сегашната врска. Ако има опција параметри овие се специфицирани од страна на заглавието на истото име како опција . Кликнете на името е резервиран да се каже дека врската треба да биде затворена по обработката на тековната барање.
Прифати
Овој наслов листи на MIME типови на содржини прифатена од страна на клиентите. Ѕвездата карактер * може да се користи за одредување на сите видови / поттипови.
Прифати-Множзнаци
Одредува карактерот енкодирања прифатени.
Прифати-јазик
Одредува јазици прифатени.
Редоследот на приоритетот за секоја опција  е определен од додате параметар q содржат децимална вредност помеѓу 0  и 1  вклучени , еднаква на 1 стандардно .
Поддршка за постојаните врски, исто така, треба да работат во случаите каде што од големината на ресурси не е однапред познат .
За ова, назначен chunked трансфер кодирање се користи за пренос на ресурси piecewise последователни пред секоја линија од текст со давање на големината на тоа во хексадецимални. Преносот завршува кога парче од нула големина, каде што последната заглавја може да биде испратена.
Дополнителни хедери во врска со овој трансфер кодирање се:
Трансфер-Encoding
Одредува трансфер кодирање. Единствената вредност, дефинирана од RFC 2616 е chunked.
Трејлер
Список на сите заглавија се појавува после последната трошка префрлени.
ТЕ
Испратени од страна на клиентот да ја наведе содржината кодирање поддржана , и одредува дали клиентот поддржува во Заглавието Кориснички шлепери со додавање на листата.
HTTPS  е едноставен Комбинацијата на HTTP со слој на енкрипција како SSL или TLS.
Тоа им овозможува на посетителите да се потврди идентитетот на мрежното место кое се пристапува преку сертификат за автентикација. Тоа го гарантира доверливост и интегритет на податоците доставена од страна на корисникот  и се добива од опслужувачот.
Тоа е генерално се користи за онлајн финансиски трансакции: електронската трговија, интернет банкарство, брокерски онлајн, итн. Тоа е исто така се користи за пребарување на приватни податоци, како што се пораки, на пример.
По default, HTTPS опслужувачите се поврзани со TCP порта 443.
Безбедноста на информациите пренесени преку HTTPS се заснова на употреба на алгоритам за шифрирање и на сертификатот за автентичност.
Претпоставувајќи дека корисниците ретко наведете протоколот тип во URL  и едноставно следете ги линковите, безбедносната истражувач разви напад од таков вид човек во средината да се заобиколат HTTPS енкрипција . Напаѓачот се наоѓа помеѓу клиентот и опслужувачот и промена на линкот https: http:, па на клиентот праќа податоци преку обичен HTTP и HTTPS не. Овој тип на напад е претставен од Moxie Marlinspike на Blackhat конференција 2009 година . Во текот на оваа конференција се претстави не само на функционирањето на напад, но исто така и некои статистика за потрошувачката. Тој успеал да се опорави стотици идентификатори, лични информации и броеви на кредитни картички во 24 часа, никој не се сомнева дека сегашните напади.
Види детална статија Строга HTTP транспорт безбедност
Строги HTTP транспорт безбедност  е механизам предложи безбедносна политика, дозволувајќи им на опслужувачот да го извести корисникот агенс  компатибилен, тоа мора да комуницирате со неа на користење на безбедна врска . Политиката е соопштено на корисникот агент опслужувачот преку HTTP одговорот во заглавието поле со име "Строга-Превоз-безбедност". Политиката одредува на еден временски период за време на која и прелистувачот кој само што треба да пристапи до опслужувачот безбедно.
Ова е пример за разговор меѓу HTTP клиент и HTTP опслужувач на www.example.com, порта 80.
GET /index.html HTTP/1.1
Host: www.example.com
HTTP/1.1 200 OK
Date: Mon, 23 May 2005 22:38:34 GMT
Server: Apache/1.3.3.7  
Last-Modified: Wed, 08 Jan 2003 23:11:55 GMT
Etag: "3f80f-1b6-3e1cb03b"
Accept-Ranges: bytes
Content-Length: 438
Connection: close
Content-Type: text/html; charset=UTF-8
